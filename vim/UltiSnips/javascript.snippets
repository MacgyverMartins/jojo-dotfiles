###########################################################################
#                            TextMate Snippets                            #
###########################################################################
snippet todo "TODO snippet" !b
// TODO ${1:texto aqui} `date +%d/%m/%Y` by Jojo - jojoyuji@gmail.com$0

endsnippet

snippet a "alert()" !b
alert(${1:"${2:value}"});$0
endsnippet

snippet event "e.preventDefault()" b
${1:e}.preventDefault();$0
endsnippet

snippet event "e.stopPropagation()" b
${1:e}.stopPropagation();$0
endsnippet

snippet :, "Object Value JS"
${1:value_name}: ${0:value},
  endsnippet

  snippet : "Object key key: 'value'"
  ${1:key}: ${2:"${3:value}"}${4:, }
  endsnippet

  snippet proto "Prototype (proto)"
  ${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) {
    ${VISUAL}$0
  };
endsnippet

snippet jsf "excerpt() - Reducing text by word limit"
function excerpt(str, nwords) {
  var words = str.split(' ');
  words.splice(nwords, words.length-1);
  return words.join(' ') + 
    (words.length !== str.split(' ').length ? '&hellip;' : '');
}
endsnippet
snippet jsf "getMaxHeight() - Get the maxHeight of a set of elements"
var getMaxHeight = function ($elms) {
  var maxHeight = 0;
  $elms.each(function () {
      // In some cases you may want to use outerHeight() instead
      var height = $(this).height();
      if (height > maxHeight) {
      maxHeight = height;
      }
      });
  return maxHeight;
};
endsnippet
snippet ajax "jquery - $.ajax" !b
$.ajax({
  type: "POST",
  url: "${1:url.php}",
  cached: ${2:true},
  ${3:data: { name: "John", location: "Boston" }},
  statusCode:{404: function(){ alert('404');}}
})
.done(function( data ) {
Â  ${4:alert( "Data Saved: " + data );}
})
.fail(function() { alert("error"); });
endsnippet

snippet ready "jquery - $(funcion(){})" !b
$(function(){
  ${1}
});
endsnippet

snippet t "Ternary" b
(${1:a>b}) ? ${2:true} : ${3:false};$0
endsnippet

##################################
#  Javascript Object Extensions  #
##################################
snippet js "Array.getUnique()" !b
Array.prototype.getUnique = function(){
   var u = {}, a = [];
   for(var i = 0, l = this.length; i < l; ++i){
      if(u.hasOwnProperty(this[i])) {
         continue;
      }
      a.push(this[i]);
      u[this[i]] = 1;
   }
   return a;
}
endsnippet

#######################
#  Jquery Extentions  #
#######################
snippet jq ".hasScrollBar($element)" b
(function($) {
    $.fn.hasScrollBar = function() {
        return this.get(0).scrollHeight > this.innerHeight();
    };
})(jQuery);
endsnippet

snippet jq ".hasReachedBottom(offset)" b
(function($){
  $.fn.hasReachedBottom = function(offset){
    return (this.scrollTop() + this.innerHeight() + offset >= this[0].scrollHeight);
  };
})(jQuery);
endsnippet

snippet import "import angular" !b
<script src="//ajax.googleapis.com/ajax/libs/angularjs/${1:1.0.6}/angular.min.js"></script>
<script>window.angular || document.write('<script src="${2:js/vendor}/angular-$1.min.js"><\/script>')</script>
endsnippet

snippet import "import angular-resource" !b
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/${1:1.0.6}/angular-resource.min.js"></script>
<script>window.angular || document.write('<script src="${2:js/vendor}/angular-resource-$1.min.js"><\/script>')</script>
endsnippet

snippet import "import jquery" !b
<script src="//ajax.googleapis.com/ajax/libs/jquery/${1:1.8.2}/jquery.min.js"></script>
<script>window.jQuery || document.write('<script src="js/vendor/jquery-$1.min.js"><\/script>')</script>
endsnippet

snippet $  "$ jquery selector"
$("${1:seletor}")${2:;}${3}
endsnippet

snippet for "for (...) {...} (faster)"
for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2--) {
  ${3:$1[$2]}${VISUAL}$0
};
endsnippet

snippet for "for (...) {...}"
for (var ${2:i}=0; $2 < ${1:Things}.length; $2++) {
  ${3:$1[$2]}${VISUAL}$0
};
endsnippet

snippet fun "function (fun)"
function ${1:function_name} (${2:argument}) {
  ${VISUAL}$0
}
endsnippet

snippet iife "Immediately-Invoked Function Expression (iife)"
(function (${1:argument}) {
 ${VISUAL}$0
 }(${2:$1}));
endsnippet

snippet ife "if ___ else"
if (${1:condition}) {
  ${2://code}
}
else {
  ${3://code}
}
endsnippet

snippet if "if"
if (${1:condition}) {
  ${VISUAL}$0
}
endsnippet

snippet timeout "setTimeout function"
setTimeout(function() {
    ${VISUAL}$0
    }${2:.bind(${3:this})}, ${1:10});
endsnippet

# Snippets for Console Debug Output

snippet log "console.log"
console.log(${1:"${2:value}"});
endsnippet
snippet cl "console.log"
console.log(${1:"${2:value}"});
endsnippet

snippet cw "console.warn"
console.warn(${1:"${2:value}"});
endsnippet

snippet ce "console.error"
console.error(${1:"${2:value}"});
endsnippet

snippet ca "console.assert"
console.assert(${1:assertion}, ${2:"${3:message}"});
endsnippet

snippet cgroup "console.group"
console.group("${1:label}");
${VISUAL}$0
console.groupEnd();
endsnippet

snippet ctime "console.time"
console.time("${1:label}");
${VISUAL}$0
console.timeEnd("$1");
endsnippet

snippet ctimestamp "console.timestamp"
console.timeStamp("${1:label}")
endsnippet

snippet ctrace "console.trace"
console.trace();
endsnippet

snippet f "Anonymous Function" 
function(${1:e}){
  ${VISUAL}$0
}${2:,}
endsnippet

snippet callback "Callback" !b
if (${1:callback} && typeof($1) === "function") {
  $1();
}$0
endsnippet


snippet r "return" 
return ${1:value};$0
endsnippet

######################
#  Angular Snippets  #
######################

snippet ssf "$scope Function" !b
$superScope.${1:functionName} = function(${2:e}){
  ${VISUAL}$0
};
endsnippet

snippet rsf "$scope Function" !b
$rootScope.${1:functionName} = function(${2:e}){
  ${VISUAL}$0
};
endsnippet

snippet sf "$scope Function" !b
$scope.${1:functionName} = function(${2:e}){
  ${VISUAL}$0
};
endsnippet

snippet s "$scope" n
$scope${1:.}$2
endsnippet

snippet ss "$superScope" 
$superScope${1:.}$0
endsnippet

snippet rs "$rootScope" 
$rootScope${1:.}$0
endsnippet

snippet controller "Angular Controller" !b
function ${1:CtrlName}($scope, $rootScope){}
$1.$inject = ['$scope'];

${2:angular.module('${3:app}')}.controller('$1', ['$scope','$rootScope', function($scope, $rootScope){
	var $superScope = $scope;
  $4
}]);
endsnippet

snippet directive "Angular Directive" !b
'use strict';
${2:angular.module('${3:app}')}.directive('${1:directiveName}', ['$timeout', '$compile', '$filter', '$rootScope',     function( $timeout, $compile, $filter, $rootScope){
  return {
    restrict:'${4:A}',
    link:function(scope, element, attr){
    ${5}
    }
  };
}]);
endsnippet

snippet filter "Angular Filter" !b
'use strict';
${2:angular.module('${3:app}')}.filter('${1:filterName}', function(){
	return function (${4:param}){
    ${5}
		return;
	};
});
endsnippet


snippet factory "Angular $http" b
${2:angular.module('${3:app}')}.factory("${1:APIname}", ['$http', function($http){
	return {
		${4:methodName}: function(params, callback) {
	       $http.post("${5:/name/doSave.action}", params).success(callback);
	     }
	 }
}]);
endsnippet

snippet factory "Angular $resource" b
${2:angular.module('${3:app}')}.factory("${1:APIname}", ['$resource', function($resource){
	return $resource(${4:var + }${5:"/private/alerta/:call"},{},  {
		${6:methodName} :{
			method:'${8:GET}',
			params:{
				call  : '${7:callHere}',
			}
		},
	}); 
}]);
endsnippet
# vim:ft=snippets:
